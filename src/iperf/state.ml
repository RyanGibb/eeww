type t =
 | TEST_START
 | TEST_RUNNING
 | RESULT_REQUEST
 | TEST_END
 | STREAM_BEGIN
 | STREAM_RUNNING
 | STREAM_END
 | ALL_STREAMS_END
 | PARAM_EXCHANGE
 | CREATE_STREAMS
 | SERVER_TERMINATE
 | CLIENT_TERMINATE
 | EXCHANGE_RESULTS
 | DISPLAY_RESULTS
 | IPERF_START
 | IPERF_DONE

let to_string = function
 | TEST_START -> "TEST_START"
 | TEST_RUNNING -> "TEST_RUNNING"
 | RESULT_REQUEST -> "RESULT_REQUEST"
 | TEST_END -> "TEST_END"
 | STREAM_BEGIN -> "STREAM_BEGIN"
 | STREAM_RUNNING -> "STREAM_RUNNING"
 | STREAM_END -> "STREAM_END"
 | ALL_STREAMS_END -> "ALL_STREAMS_END"
 | PARAM_EXCHANGE -> "PARAM_EXCHANGE"
 | CREATE_STREAMS -> "CREATE_STREAMS"
 | SERVER_TERMINATE -> "SERVER_TERMINATE"
 | CLIENT_TERMINATE -> "CLIENT_TERMINATE"
 | EXCHANGE_RESULTS -> "EXCHANGE_RESULTS"
 | DISPLAY_RESULTS -> "DISPLAY_RESULTS"
 | IPERF_START -> "IPERF_START"
 | IPERF_DONE -> "IPERF_DONE"

let to_int = function
 | TEST_START -> 1
 | TEST_RUNNING -> 2
 | RESULT_REQUEST -> 3
 | TEST_END -> 4
 | STREAM_BEGIN -> 5
 | STREAM_RUNNING -> 6
 | STREAM_END -> 7
 | ALL_STREAMS_END -> 8
 | PARAM_EXCHANGE -> 9
 | CREATE_STREAMS -> 10
 | SERVER_TERMINATE -> 11
 | CLIENT_TERMINATE -> 12
 | EXCHANGE_RESULTS -> 13
 | DISPLAY_RESULTS -> 14
 | IPERF_START -> 15
 | IPERF_DONE -> 16

let of_int = function
 | 1 -> TEST_START
 | 2 -> TEST_RUNNING
 | 3 -> RESULT_REQUEST
 | 4 -> TEST_END
 | 5 -> STREAM_BEGIN
 | 6 -> STREAM_RUNNING
 | 7 -> STREAM_END
 | 8 -> ALL_STREAMS_END
 | 9 -> PARAM_EXCHANGE
 | 10 -> CREATE_STREAMS
 | 11 -> SERVER_TERMINATE
 | 12 -> CLIENT_TERMINATE
 | 13 -> EXCHANGE_RESULTS
 | 14 -> DISPLAY_RESULTS
 | 15 -> IPERF_START
 | 16 -> IPERF_DONE
 | n -> raise (Failure ("Iperf of_int " ^ (string_of_int n)))

type error =
 | ACCESS_DENIED
 | SERVER_ERROR

let error_to_int = function
 | ACCESS_DENIED -> -1
 | SERVER_ERROR -> -2

let error_of_int = function
 | (-1) -> ACCESS_DENIED
 | (-2) -> SERVER_ERROR
 | n -> raise (Failure ("Iperf unknown error " ^ (string_of_int n)))
